{"version":3,"sources":["data.js","common/Grid.js","badperformance/CardHeader.js","badperformance/CardBody.js","badperformance/AppBadPerformance.js","enhancement1/CardHeader.js","enhancement1/CardBody.js","enhancement1/Card.js","enhancement1/AppEnhancement1.js","enhancement2/CardHeader.js","enhancement2/CardBody.js","enhancement2/Card.js","enhancement2/AppEnhancement2.js","enhancement3/CardHeader.js","enhancement3/CardBody.js","enhancement3/Card.js","enhancement3/AppEnhancement3.js","App.js","serviceWorker.js","index.js"],"names":["cards","title","contact","likes","Grid","id","columnsNumber","children","className","rowNumber","Math","ceil","length","rows","i","startRow","endRow","push","slice","map","row","index","rowKey","key","element","gridCreateRow","gridWithColumns","CardHeader","console","log","CardBody","onHover","style","margin","padding","color","backgroundColor","onMouseEnter","App","useState","cardsData","setCardsData","handleOnClick","cardTitle","newCardsData","forEach","card","updateCards","cardData","undefined","onClick","Card","update","totalLikes","setTotalLikes","AppEnhancement1","React","memo","AppEnhancement2","useCallback","AppEnhancement3","Links","to","exact","path","component","AppLowPerformance","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ff5969db.chunk.js","sourcesContent":["export const cards = [\n  { title: 'Dog 1', contact: 'person1@email.com', likes: 0 },\n  { title: 'Dog 2', contact: 'person2@email.com', likes: 0 },\n  { title: 'Dog 3', contact: 'person3@email.com', likes: 0 },\n  { title: 'Dog 4', contact: 'person4@email.com', likes: 0 },\n  { title: 'Dog 5', contact: 'person5@email.com', likes: 0 },\n  { title: 'Dog 6', contact: 'person6@email.com', likes: 0 },\n  { title: 'Dog 7', contact: 'person7@email.com', likes: 0 },\n  { title: 'Dog 8', contact: 'person8@email.com', likes: 0 },\n  { title: 'Dog 9', contact: 'person9@email.com', likes: 0 },\n  { title: 'Dog 10', contact: 'person10@email.com', likes: 0 },\n  { title: 'Dog 11', contact: 'person11@email.com', likes: 0 },\n  { title: 'Dog 12', contact: 'person12@email.com', likes: 0 },\n];\n","import React from 'react';\nimport slice from 'lodash.slice';\nimport './Grid.scss';\n\nconst Grid = ({ id, columnsNumber, children }) => {\n  const gridCreateRow = (row, rowKey) => {\n    return (\n      <div className=\"my-uic--row\" key={rowKey}>\n        {row.map((element, key) => {\n          return (\n            <div key={`${rowKey}-section-cell-${key}`} className=\"my-uic--cell\">\n              {element}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const gridWithColumns = () => {\n    const rowNumber = Math.ceil(children.length / columnsNumber);\n\n    const rows = [];\n    for (let i = 0; i < rowNumber; i += 1) {\n      const startRow = i * columnsNumber;\n      const endRow = startRow + columnsNumber;\n      rows.push(slice(children, startRow, endRow));\n    }\n\n    return (\n      <>{rows.map((row, index) => gridCreateRow(row, `${id}-row-${index}`))}</>\n    );\n  };\n\n  return <div className=\"my-uic--grid\">{gridWithColumns()}</div>;\n};\n\nexport default Grid;\n","import React from 'react';\n\nconst CardHeader = ({ title }) => {\n  console.log('Computational cost for CardHeader');\n  return <h4>{title}</h4>;\n};\n\nexport default CardHeader;\n","import React from 'react';\n\nconst CardBody = ({ contact, onHover }) => {\n  for (let i = 0; i < 1000; i++) {\n    console.log('Computational cost for CardBody');\n  }\n  return (\n    <div\n      style={{\n        margin: '12px',\n        padding: '6px',\n        color: 'rgb(255, 0, 0)',\n        backgroundColor: '#F0F0F0',\n      }}\n      onMouseEnter={onHover}\n    >\n      <h6>High Computational cost</h6>\n      <h5>{`Owner: ${contact}`}</h5>\n    </div>\n  );\n};\n\nexport default CardBody;\n","import React, { useState } from 'react';\nimport '../common/App.scss';\nimport { cards } from '../data.js';\nimport Grid from '../common/Grid';\nimport CardHeader from './CardHeader';\nimport CardBody from './CardBody';\n\nfunction App() {\n  const [cardsData, setCardsData] = useState(cards);\n\n  const updateCards = (cardTitle) => {\n    const newCardsData = [...cardsData];\n    newCardsData.forEach((card) => {\n      if (card.title === cardTitle) {\n        card.likes++;\n      }\n    });\n    setCardsData(newCardsData);\n  };\n\n  const handleOnClick = (title) => {\n    updateCards(title);\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"App-header\">React Performance in 2020</header>\n      <main>\n        <Grid id=\"maingrid\" columnsNumber={4}>\n          {cardsData.map((cardData, index) => {\n            return (\n              <div className=\"Card\" key={`card-key-${cardData.title}`}>\n                <CardHeader title={cardData.title} />\n                <CardBody\n                  contact={cardData.contact}\n                  onHover={() => console.log(`${cardData.title} on hover`)}\n                />\n                {cardData.likes !== undefined && (\n                  <span>{`Likes: ${cardData.likes}`}</span>\n                )}\n                <button onClick={() => handleOnClick(cardData.title)}>\n                  +1\n                </button>\n              </div>\n            );\n          })}\n        </Grid>\n      </main>\n      <footer>This app is slow</footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nconst CardHeader = ({ title }) => {\n  console.log('Computational cost for CardHeader');\n  return <h4>{title}</h4>;\n};\n\nexport default CardHeader;\n","import React from 'react';\n\nconst CardBody = ({ contact, style, onHover }) => {\n  for (let i = 0; i < 1000; i++) {\n    console.log('Computational cost for CardBody');\n  }\n  return (\n    <div style={style} onMouseEnter={onHover}>\n      <h6>High Computational cost</h6>\n      <h5>{`Owner: ${contact}`}</h5>\n    </div>\n  );\n};\n\nexport default CardBody;\n","import React, { useState } from 'react';\nimport CardHeader from './CardHeader';\nimport CardBody from './CardBody';\n\nconst Card = ({ title, contact, update }) => {\n  const [totalLikes, setTotalLikes] = useState(0);\n  const handleOnClick = () => {\n    setTotalLikes(totalLikes + 1);\n  };\n\n  return (\n    <div className=\"Card\">\n      <CardHeader title={title} />\n      <CardBody\n        contact={contact}\n        style={{\n          margin: '12px',\n          padding: '6px',\n          color: 'rgb(255, 0, 0)',\n          backgroundColor: '#F0F0F0',\n        }}\n        onHover={() => console.log(`${title} on hover`)}\n      />\n      <span>{`Likes: ${totalLikes}`}</span>\n      <button onClick={handleOnClick}>+1</button>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport '../common/App.scss';\nimport { cards } from '../data.js';\nimport Grid from '../common/Grid';\nimport Card from './Card';\n\nfunction AppEnhancement1() {\n  return (\n    <div className=\"app\">\n      <header className=\"App-header\">React Performance in 2020</header>\n      <main>\n        <Grid id=\"maingrid\" columnsNumber={4}>\n          {cards.map((cardData, index) => {\n            return (\n              <Card\n                key={`card-key-${cardData.title}`}\n                title={cardData.title}\n                contact={cardData.contact}\n              />\n            );\n          })}\n        </Grid>\n      </main>\n      <footer>This app is slow</footer>\n    </div>\n  );\n}\n\nexport default AppEnhancement1;\n","import React from 'react';\n\nconst CardHeader = ({ title }) => {\n  console.log('Computational cost for CardHeader');\n  return <h4>{title}</h4>;\n};\n\nexport default React.memo(CardHeader);\n","import React from 'react';\n\nconst CardBody = ({ contact, style, onHover }) => {\n  for (let i = 0; i < 1000; i++) {\n    console.log('Computational cost for CardBody');\n  }\n  return (\n    <div style={style} onMouseEnter={onHover}>\n      <h6>High Computational cost</h6>\n      <h5>{`Owner: ${contact}`}</h5>\n    </div>\n  );\n};\n\nexport default React.memo(CardBody);\n","import React, { useState } from 'react';\nimport CardHeader from './CardHeader';\nimport CardBody from './CardBody';\n\nconst Card = ({ title, contact, update }) => {\n  const [totalLikes, setTotalLikes] = useState(0);\n  const handleOnClick = () => {\n    setTotalLikes(totalLikes + 1);\n  };\n\n  return (\n    <div className=\"Card\">\n      <CardHeader title={title} />\n      <CardBody\n        contact={contact}\n        style={{\n          margin: '12px',\n          padding: '6px',\n          color: 'rgb(255, 0, 0)',\n          backgroundColor: '#F0F0F0',\n        }}\n        onHover={() => console.log(`${title} on hover`)}\n      />\n      <span>{`Likes: ${totalLikes}`}</span>\n      <button onClick={handleOnClick}>+1</button>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport '../common/App.scss';\nimport { cards } from '../data.js';\nimport Grid from '../common/Grid';\nimport Card from './Card';\n\nfunction AppEnhancement2() {\n  return (\n    <div className=\"app\">\n      <header className=\"App-header\">React Performance in 2020</header>\n      <main>\n        <Grid id=\"maingrid\" columnsNumber={4}>\n          {cards.map((cardData, index) => {\n            return (\n              <Card\n                key={`card-key-${cardData.title}`}\n                title={cardData.title}\n                contact={cardData.contact}\n              />\n            );\n          })}\n        </Grid>\n      </main>\n      <footer>This app is slow</footer>\n    </div>\n  );\n}\n\nexport default AppEnhancement2;\n","import React from 'react';\n\nconst CardHeader = ({ title }) => {\n  console.log('Computational cost for CardHeader');\n  return <h4>{title}</h4>;\n};\n\nexport default React.memo(CardHeader);\n","import React from 'react';\n\nconst CardBody = ({ contact, style, onHover }) => {\n  for (let i = 0; i < 1000; i++) {\n    console.log('Computational cost for CardBody');\n  }\n  return (\n    <div style={style} onMouseEnter={onHover}>\n      <h6>High Computational cost</h6>\n      <h5>{`Owner: ${contact}`}</h5>\n    </div>\n  );\n};\n\nexport default React.memo(CardBody);\n","import React, { useState, useCallback } from 'react';\nimport CardHeader from './CardHeader';\nimport CardBody from './CardBody';\n\nconst style = {\n  margin: '12px',\n  padding: '6px',\n  color: 'rgb(255, 0, 0)',\n  backgroundColor: '#F0F0F0',\n};\n\nconst Card = ({ title, contact, update }) => {\n  const [totalLikes, setTotalLikes] = useState(0);\n  const handleOnClick = () => {\n    setTotalLikes(totalLikes + 1);\n  };\n\n  const onHover = useCallback(() => console.log(`${title} on hover`), [title]);\n\n  return (\n    <div className=\"Card\">\n      <CardHeader title={title} />\n      <CardBody contact={contact} style={style} onHover={onHover} />\n      <span>{`Likes: ${totalLikes}`}</span>\n      <button onClick={handleOnClick}>+1</button>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport '../common/App.scss';\nimport { cards } from '../data.js';\nimport Grid from '../common/Grid';\nimport Card from './Card';\n\nfunction AppEnhancement3() {\n  return (\n    <div className=\"app\">\n      <header className=\"App-header\">React Performance in 2020</header>\n      <main>\n        <Grid id=\"maingrid\" columnsNumber={4}>\n          {cards.map((cardData, index) => {\n            return (\n              <Card\n                key={`card-key-${cardData.title}`}\n                title={cardData.title}\n                contact={cardData.contact}\n              />\n            );\n          })}\n        </Grid>\n      </main>\n      <footer>This app is slow</footer>\n    </div>\n  );\n}\n\nexport default AppEnhancement3;\n","import React from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport AppLowPerformance from './badperformance/AppBadPerformance';\nimport AppEnhancement1 from './enhancement1/AppEnhancement1';\nimport AppEnhancement2 from './enhancement2/AppEnhancement2';\nimport AppEnhancement3 from './enhancement3/AppEnhancement3';\n\nconst Links = () => (\n  <>\n    <div>\n      <Link to=\"/badperformance\">Slow App</Link>\n    </div>\n    <div>\n      <Link to=\"/enhancement1\">Enhancement 1 - Atomic Design</Link>\n    </div>\n    <div>\n      <Link to=\"/enhancement2\">Enhancement 2 - Avoid reconciliation</Link>\n    </div>\n    <div>\n      <Link to=\"/enhancement3\">{`Enhancement 3 - Watch out for Object Literals {{`}</Link>\n    </div>\n  </>\n);\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\" component={Links} />\n        <Route path=\"/badperformance\" component={AppLowPerformance} />\n        <Route path=\"/enhancement1\" component={AppEnhancement1} />\n        <Route path=\"/enhancement2\" component={AppEnhancement2} />\n        <Route path=\"/enhancement3\" component={AppEnhancement3} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}